import java.sql.*;
import java.math.*;
import java.util.*;
public class SystemeExploitationDAO extends DAO<SystemeExploitation>{
	public SystemeExploitationDAO(Connection conn){
		super(conn);
	}
	public boolean delete(SystemeExploitation obj){
		return Requete.deleteFrom("systeme_exploitation", obj.createHashTable());
	}
	public boolean update(SystemeExploitation obj){ 
		return Requete.update("systeme_exploitation", obj.createHashTable());
	}

	public SystemeExploitation find(int id){
		SystemeExploitation systeme = null;
		try{
			ResultSet result = Requete.demander(this.connect, Requete.selectWhere("systeme_exploitation", "id", Integer.toString(id)));
			if(result.first()){
				systeme = new SystemeExploitation(result.getInt("id"), result.getString("nom"), result.getInt("version"));
			} //id | nom  | id_se | nom_fabriquant | id_user
			result.close();
			//else { System.out.println("ERR!!! Utilisateur n'existe pas dans la base ... "); }
		}catch(SQLException e){ e.printStackTrace(); }
		return systeme;
	}//fin find

	public boolean create(SystemeExploitation obj){
		return Requete.insertInto("systeme_exploitation", obj.createHashTable());
	}

	public int ajouterSysteme(){
		Scanner sc = new Scanner(System.in);
		boolean reponse = false;
		String nom_systeme;
		int version;
		int nouveau_id_se = 0;
		while(reponse == false){
			System.out.println("\nSELECTIONNER...");
			System.out.print("Systeme Exploitation: ");
			nom_systeme = sc.nextLine();
			System.out.print("Version: ");
			version = sc.nextInt();
			try{
				ResultSet result = Requete.demander(this.connect, "SELECT MAX(id) FROM systeme_exploitation");
				if(result.first())
					nouveau_id_se = result.getInt("max");
				result.close();
			}catch(SQLException e){ e.printStackTrace(); }
			nouveau_id_se++;
			reponse = this.create(new SystemeExploitation(nouveau_id_se, nom_systeme, version));
		}
		return nouveau_id_se;
		//controlli => settano var controllo = false
	}
}//fin classe DAO<Peripherique>


